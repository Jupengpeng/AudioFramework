/*
 * Copyright (c) 2003, 2006 Matteo Frigo
 * Copyright (c) 2003, 2006 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

/* This file was automatically generated --- DO NOT EDIT */
/* Generated on Sat Jul  1 22:46:07 EDT 2006 */

#include "config.h"



/* cheap-mode: VECTGRADE_FULL succeeded. (93 steps) */
/* Generated by: ../../../genfft-k7/gen_twiddle -no-randomized-cse -n 7 -name t1k7_7 */

/*
 * Generator Id's : 
 * $Id: algsimp.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: fft.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: gen_twiddle.ml,v 1.14 2005-12-24 21:08:49 athena Exp $
 */

/* The following asm code is Copyright (c) 2000-2001 Stefan Kral */
.section .rodata
	.balign 64
KP623489801KP222520933: .float +0.623489801858733530525004884004239810632274731, +0.222520933956314404288902564496794759466355569
KP222520933KP900968867: .float +0.222520933956314404288902564496794759466355569, +0.900968867902419126236102319507445051165919162
KP623489801KP900968867: .float +0.623489801858733530525004884004239810632274731, +0.900968867902419126236102319507445051165919162
KP900968867KP900968867: .float +0.900968867902419126236102319507445051165919162, +0.900968867902419126236102319507445051165919162
KP974927912KP781831482: .float +0.974927912181823607018131682993931217232785801, +0.781831482468029808708444526674057750232334519
KP781831482KP433883739: .float +0.781831482468029808708444526674057750232334519, +0.433883739117558120475768332848358754609990728
KP974927912KP433883739: .float +0.974927912181823607018131682993931217232785801, +0.433883739117558120475768332848358754609990728
KP433883739KP781831482: .float +0.433883739117558120475768332848358754609990728, +0.781831482468029808708444526674057750232334519
KN974927912KP781831482: .float -0.974927912181823607018131682993931217232785801, +0.781831482468029808708444526674057750232334519
KP433883739KP974927912: .float +0.433883739117558120475768332848358754609990728, +0.974927912181823607018131682993931217232785801
KP222520933KP222520933: .float +0.222520933956314404288902564496794759466355569, +0.222520933956314404288902564496794759466355569
KP623489801KP623489801: .float +0.623489801858733530525004884004239810632274731, +0.623489801858733530525004884004239810632274731
.text
.text
	.balign 64
t1k7_7:
	subl $84, %esp
	femms 
	movl %ebx, 80(%esp)
	movl 100(%esp), %edx
	movl 108(%esp), %ebx
	movl %esi, 76(%esp)
	movl %edi, 72(%esp)
	movl 88(%esp), %ecx
	movl %ebp, 68(%esp)
	movl 96(%esp), %eax
	movl 104(%esp), %esi
	leal (,%edx,4), %edx
	leal (,%ebx,4), %ebx
	.p2align 4,,7
.L0:
	/* promise simd cell size = 8 */ 
	leal (%edx,%edx,4), %edi
	movq 8(%eax), %mm0
	movq (%ecx,%edx,2), %mm1
	movq 32(%eax), %mm3
	leal (%edx,%edx,2), %ebp
	movq (%ecx,%edi), %mm4
	movq (%ecx,%edx,4), %mm7
	leal (%edx,%edx,4), %edi
	movq 24(%eax), %mm6
	pswapd %mm1, %mm2
	pfmul %mm0, %mm1
	pswapd %mm4, %mm5
	pfmul %mm3, %mm4
	pfmul %mm0, %mm2
	pswapd %mm7, %mm0
	pfmul %mm3, %mm5
	movq 16(%eax), %mm3
	pfmul %mm6, %mm7
	pfacc %mm4, %mm1
	movq (%ecx,%ebp), %mm4
	pfmul %mm6, %mm0
	pfnacc %mm5, %mm2
	movq %mm1, 0(%esp)
	movq 40(%eax), %mm5
	movq (%ecx,%ebp,2), %mm1
	pswapd %mm4, %mm6
	pfmul %mm3, %mm4
	leal (%edx,%edx,2), %ebp
	pfmul %mm3, %mm6
	pswapd %mm1, %mm3
	pfmul %mm5, %mm1
	pfacc %mm7, %mm4
	movq (%eax), %mm7
	addl $48, %eax
	pfmul %mm5, %mm3
	movq (%ecx,%edx), %mm5
	pfnacc %mm0, %mm6
	pswapd %mm5, %mm0
	pfmul %mm7, %mm5
	pfmul %mm7, %mm0
	pswapd %mm4, %mm7
	pfacc %mm1, %mm5
	pfnacc %mm3, %mm0
	pfacc %mm5, %mm4
	pswapd %mm5, %mm5
	pfnacc %mm7, %mm5
	movq %mm4, %mm1
	movq %mm4, %mm3
	pswapd %mm4, %mm7
	pfmul KP623489801KP222520933, %mm1
	pfmul KP222520933KP900968867, %mm3
	pfmul KP623489801KP900968867, %mm7
	movq %mm1, 16(%esp)
	movq %mm6, %mm1
	pfacc %mm0, %mm6
	pfnacc %mm2, %mm0
	movq %mm3, 8(%esp)
	movq 0(%esp), %mm3
	pfacc %mm6, %mm4
	movq %mm0, 24(%esp)
	pswapd %mm3, %mm0
	pfacc %mm2, %mm3
	movq (%ecx), %mm2
	/* simd data load/store barrier */ 
	pfnacc %mm0, %mm1
	movq %mm3, 56(%esp)
	movq %mm3, %mm0
	pfadd %mm2, %mm3
	movq %mm2, 32(%esp)
	pswapd %mm6, %mm2
	pfmul KP900968867KP900968867, %mm0
	pfmul KP623489801KP900968867, %mm2
	pfadd %mm3, %mm4
	movq 24(%esp), %mm3
	pfsubr 32(%esp), %mm0
	movq %mm4, (%ecx)
	pswapd %mm3, %mm4
	pfnacc %mm2, %mm7
	movq %mm1, %mm2
	pfmul KP974927912KP781831482, %mm4
	pfmul KP781831482KP433883739, %mm2
	movq %mm7, 40(%esp)
	movq %mm5, %mm7
	pfmul KP974927912KP781831482, %mm5
	pswapd %mm7, %mm7
	movq %mm4, 48(%esp)
	movq %mm3, %mm4
	pfmul KP974927912KP433883739, %mm3
	pfmul KP433883739KP781831482, %mm4
	pfnacc %mm5, %mm3
	movq %mm6, %mm5
	pfmul KP623489801KP222520933, %mm6
	pfmul KP222520933KP900968867, %mm5
	pfsub %mm2, %mm3
	movq 16(%esp), %mm2
	pfnacc %mm6, %mm2
	movq %mm1, %mm6
	pfmul KN974927912KP781831482, %mm1
	pfmul KP433883739KP974927912, %mm6
	pfadd %mm0, %mm2
	movq 8(%esp), %mm0
	pfacc %mm5, %mm0
	movq %mm2, %mm5
	pfsub %mm3, %mm2
	pfadd %mm3, %mm5
	movq %mm7, %mm3
	pfmul KP974927912KP433883739, %mm7
	pfmul KP433883739KP781831482, %mm3
	movq %mm2, (%ecx,%edi)
	movq 56(%esp), %mm2
	movq %mm5, (%ecx,%edx,2)
	pfpnacc %mm7, %mm4
	movq 48(%esp), %mm7
	movq %mm2, %mm5
	pfmul KP222520933KP222520933, %mm2
	pfmul KP623489801KP623489801, %mm5
	pfacc %mm3, %mm7
	movq 32(%esp), %mm3
	pfsub %mm1, %mm4
	movq %mm3, %mm1
	pfsub %mm2, %mm3
	pfadd %mm6, %mm7
	pfadd %mm5, %mm1
	pfadd 40(%esp), %mm3
	pfsub %mm0, %mm1
	movq %mm3, %mm2
	movq %mm1, %mm6
	pfsub %mm7, %mm3
	pfsub %mm4, %mm1
	pfadd %mm7, %mm2
	pfadd %mm4, %mm6
	movq %mm3, (%ecx,%ebp,2)
	movq %mm1, (%ecx,%edx,4)
	movq %mm2, (%ecx,%edx)
	movq %mm6, (%ecx,%ebp)
	addl %ebx, %ecx
	decl %esi
	jnz .L0
	femms 
	movl 80(%esp), %ebx
	movl 76(%esp), %esi
	movl 72(%esp), %edi
	movl 68(%esp), %ebp
	addl $84, %esp
	ret 

.section .rodata
nam:
	.string "t1k7_7"
	.align 4
twinstr:
	.byte 4
	.byte 0
	.value 7
	.byte 3
	.byte 1
	.value 0
	.align 4
desc:
	.long 7
	.long nam
	.long twinstr
	.long fftwf_kdft_ct_k7_mgenus
	.double 36
	.double 30
	.double 0
	.double 0
	.long 0
	.long 0
	.long 0

.text
	.align 4
.globl fftwf_codelet_t1k7_7
fftwf_codelet_t1k7_7:
	subl $12,%esp
	movl 16(%esp),%eax
	addl $-4,%esp
	pushl $desc
	pushl $t1k7_7
	pushl %eax
	call fftwf_kdft_dit_register
	addl $16,%esp
	addl $12,%esp
	ret

