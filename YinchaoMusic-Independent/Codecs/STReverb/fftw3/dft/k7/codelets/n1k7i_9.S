/*
 * Copyright (c) 2003, 2006 Matteo Frigo
 * Copyright (c) 2003, 2006 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

/* This file was automatically generated --- DO NOT EDIT */
/* Generated on Sat Jul  1 22:42:45 EDT 2006 */

#include "config.h"



/* cheap-mode: VECTGRADE_FULL succeeded. (97 steps) */
/* Generated by: ../../../genfft-k7/gen_notw -no-randomized-cse -n 9 -sign 1 -name n1k7i_9 */

/*
 * Generator Id's : 
 * $Id: algsimp.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: fft.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: gen_notw.ml,v 1.12 2006-01-05 03:04:27 stevenj Exp $
 */

/* The following asm code is Copyright (c) 2000-2001 Stefan Kral */
.section .rodata
	.balign 64
KP500000000KP500000000: .float +0.500000000000000000000000000000000000000000000, +0.500000000000000000000000000000000000000000000
KP866025403KN866025403: .float +0.866025403784438646763723170752936183471402627, -0.866025403784438646763723170752936183471402627
KP766044443KP642787609: .float +0.766044443118978035202392650555416673935832457, +0.642787609686539326322643409907263432907559884
KP342020143KP939692620: .float +0.342020143325668733044099614682259580763083368, +0.939692620785908384054109277324731469936208134
KP642787609KP766044443: .float +0.642787609686539326322643409907263432907559884, +0.766044443118978035202392650555416673935832457
KP984807753KP173648177: .float +0.984807753012208059366743024589523013670643252, +0.173648177666930348851716626769314796000375677
KP173648177KP984807753: .float +0.173648177666930348851716626769314796000375677, +0.984807753012208059366743024589523013670643252
KP866025403KP866025403: .float +0.866025403784438646763723170752936183471402627, +0.866025403784438646763723170752936183471402627
.text
.text
	.balign 64
n1k7i_9:
	subl $52, %esp
	femms 
	movl %ebx, 48(%esp)
	movl 72(%esp), %edx
	movl 76(%esp), %ebx
	movl %esi, 44(%esp)
	movl %edi, 40(%esp)
	movl 60(%esp), %eax
	movl %ebp, 36(%esp)
	movl 68(%esp), %ecx
	sall $2, 84(%esp)
	leal (,%edx,4), %edx
	sall $2, 88(%esp)
	leal (,%ebx,4), %ebx
	.p2align 4,,7
.L0:
	/* promise simd cell size = 8 */ 
	leal (%edx,%edx,2), %esi
	movq (%eax), %mm6
	movq (%eax,%edx,4), %mm4
	leal (%edx,%edx,4), %ebp
	movq (%eax,%esi), %mm1
	movq (%eax,%esi,2), %mm0
	leal (%esi,%edx,4), %edi
	leal (%ebx,%ebx,2), %esi
	movq (%eax,%edi), %mm3
	movq %mm6, %mm7
	leal (%ebx,%ebx,4), %edi
	movq %mm4, %mm5
	movq %mm1, %mm2
	pfadd %mm0, %mm1
	pfsubr %mm0, %mm2
	pfadd %mm3, %mm5
	pfadd %mm1, %mm6
	pfmul KP500000000KP500000000, %mm1
	pfsubr %mm3, %mm4
	movq (%eax,%edx,8), %mm3
	pswapd %mm2, %mm2
	movq %mm5, %mm0
	pfmul KP866025403KN866025403, %mm2
	movq %mm6, 16(%esp)
	pfmul KP500000000KP500000000, %mm0
	movq (%eax,%ebp), %mm6
	pswapd %mm4, %mm4
	pfsub %mm1, %mm7
	leal (%edi,%ebx,2), %ebp
	pfmul KP866025403KN866025403, %mm4
	movq %mm6, %mm1
	pfadd %mm3, %mm6
	movq %mm2, 0(%esp)
	movq %mm7, 8(%esp)
	movq (%eax,%edx,2), %mm2
	pfsub %mm3, %mm1
	movq (%eax,%edx), %mm3
	/* simd data load/store barrier */ 
	addl 84(%esp), %eax
	pswapd %mm2, %mm7
	pfadd %mm6, %mm2
	pswapd %mm6, %mm6
	pfmul KP866025403KN866025403, %mm1
	pfmul KP500000000KP500000000, %mm6
	pfsub %mm6, %mm7
	movq %mm3, %mm6
	pfsub %mm0, %mm3
	pfadd %mm5, %mm6
	movq %mm7, %mm0
	pfsub %mm1, %mm7
	movq %mm3, %mm5
	pfadd %mm4, %mm3
	pfadd %mm1, %mm0
	movq %mm6, %mm1
	pfsub %mm4, %mm5
	pfadd %mm2, %mm6
	movq %mm3, %mm4
	pfmul KP766044443KP642787609, %mm3
	pfsubr %mm2, %mm1
	pswapd %mm7, %mm2
	pfmul KP342020143KP939692620, %mm7
	pswapd %mm0, %mm0
	pfmul KP642787609KP766044443, %mm4
	pfmul KP342020143KP939692620, %mm2
	pswapd %mm1, %mm1
	movq %mm3, 24(%esp)
	movq %mm5, %mm3
	pfmul KP984807753KP173648177, %mm5
	pfmul KP866025403KN866025403, %mm1
	pfmul KP173648177KP984807753, %mm3
	pfpnacc %mm5, %mm2
	pfpnacc %mm7, %mm3
	movq 16(%esp), %mm7
	movq %mm7, %mm5
	pfadd %mm6, %mm7
	pfmul KP500000000KP500000000, %mm6
	movq %mm7, (%ecx)
	movq %mm2, %mm7
	pfpnacc %mm3, %mm2
	pfsub %mm6, %mm5
	movq %mm0, %mm6
	pfmul KP984807753KP173648177, %mm0
	pfpnacc %mm7, %mm3
	pfmul KP173648177KP984807753, %mm6
	pfmul KP866025403KP866025403, %mm2
	movq %mm5, %mm7
	pfadd %mm1, %mm5
	pfsub %mm1, %mm7
	movq 8(%esp), %mm1
	pfacc %mm0, %mm4
	movq 0(%esp), %mm0
	movq %mm5, (%ecx,%esi)
	movq %mm1, %mm5
	movq %mm7, (%ecx,%esi,2)
	pfsub %mm0, %mm1
	pfadd %mm0, %mm5
	movq 24(%esp), %mm0
	movq %mm1, %mm7
	pfadd %mm3, %mm1
	pfmul KP500000000KP500000000, %mm3
	pfnacc %mm6, %mm0
	pswapd %mm4, %mm6
	movq %mm1, (%ecx,%ebx,2)
	movq %mm5, %mm1
	pfnacc %mm0, %mm6
	pfacc %mm4, %mm0
	pfsub %mm3, %mm7
	pfmul KP866025403KP866025403, %mm6
	pfadd %mm0, %mm5
	pfmul KP500000000KP500000000, %mm0
	movq %mm7, %mm4
	pfadd %mm2, %mm7
	pfsub %mm2, %mm4
	movq %mm5, (%ecx,%ebx)
	movq %mm7, (%ecx,%edi)
	pfsub %mm0, %mm1
	movq %mm4, (%ecx,%ebx,8)
	movq %mm1, %mm3
	pfadd %mm6, %mm1
	pfsub %mm6, %mm3
	movq %mm1, (%ecx,%ebx,4)
	movq %mm3, (%ecx,%ebp)
	addl 88(%esp), %ecx
	decl 80(%esp)
	jnz .L0
	femms 
	movl 48(%esp), %ebx
	movl 44(%esp), %esi
	movl 40(%esp), %edi
	movl 36(%esp), %ebp
	addl $52, %esp
	ret 

.section .rodata
nam:
	.string "n1k7i_9"
	.align 4
desc:
	.long 9
	.long nam
	.double 40
	.double 20
	.double 0
	.double 0
	.long fftwf_kdft_k7_pgenus
	.long 0
	.long 0
	.long 0
	.long 0

.text
	.align 4
.globl fftwf_codelet_n1k7i_9
fftwf_codelet_n1k7i_9:
	subl $12,%esp
	addl $-4,%esp
	pushl $desc
	pushl $n1k7i_9
	pushl 28(%esp)
	call fftwf_kdft_register
	addl $16,%esp
	addl $12,%esp
	ret

