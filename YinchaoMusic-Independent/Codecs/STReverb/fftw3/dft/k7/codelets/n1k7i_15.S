/*
 * Copyright (c) 2003, 2006 Matteo Frigo
 * Copyright (c) 2003, 2006 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

/* This file was automatically generated --- DO NOT EDIT */
/* Generated on Sat Jul  1 22:43:40 EDT 2006 */

#include "config.h"



/* cheap-mode: VECTGRADE_FULL succeeded. (232 steps) */
/* Generated by: ../../../genfft-k7/gen_notw -no-randomized-cse -n 15 -sign 1 -name n1k7i_15 */

/*
 * Generator Id's : 
 * $Id: algsimp.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: fft.ml,v 1.4 2006-01-05 03:04:27 stevenj Exp $
 * $Id: gen_notw.ml,v 1.12 2006-01-05 03:04:27 stevenj Exp $
 */

/* The following asm code is Copyright (c) 2000-2001 Stefan Kral */
.section .rodata
	.balign 64
KP500000000KP500000000: .float +0.500000000000000000000000000000000000000000000, +0.500000000000000000000000000000000000000000000
KP866025403KN866025403: .float +0.866025403784438646763723170752936183471402627, -0.866025403784438646763723170752936183471402627
KP559016994KP559016994: .float +0.559016994374947424102293417182819058860154590, +0.559016994374947424102293417182819058860154590
KP250000000KP250000000: .float +0.250000000000000000000000000000000000000000000, +0.250000000000000000000000000000000000000000000
KP951056516KP951056516: .float +0.951056516295153572116439333379382143405698634, +0.951056516295153572116439333379382143405698634
KP587785252KP587785252: .float +0.587785252292473129168705954639072768597652438, +0.587785252292473129168705954639072768597652438
chs_lo: .long 0x80000000, 0x00000000
.text
.text
	.balign 64
n1k7i_15:
	subl $132, %esp
	femms 
	movl %ebx, 128(%esp)
	movl 152(%esp), %edx
	movl 156(%esp), %ebx
	movl %esi, 124(%esp)
	movl %edi, 120(%esp)
	movl 140(%esp), %eax
	movl %ebp, 116(%esp)
	movl 148(%esp), %ecx
	sall $2, 164(%esp)
	leal (,%edx,4), %edx
	sall $2, 168(%esp)
	leal (,%ebx,4), %ebx
	.p2align 4,,7
.L0:
	/* promise simd cell size = 8 */ 
	leal (%edx,%edx,4), %esi
	movq (%eax,%edx,4), %mm3
	movq (%eax), %mm6
	leal (%edx,%edx,8), %ebp
	leal (%esi,%edx,2), %edi
	movq (%eax,%esi,2), %mm0
	movq (%eax,%esi), %mm1
	leal (%ebp,%edx,4), %esi
	movq (%eax,%edi,2), %mm4
	leal (%edx,%edx,2), %edi
	movq %mm6, %mm7
	movq %mm1, %mm2
	pfadd %mm0, %mm1
	movq %mm4, %mm5
	pfadd %mm3, %mm4
	pfsubr %mm0, %mm2
	pfadd %mm1, %mm6
	pfmul KP500000000KP500000000, %mm1
	pfsubr %mm3, %mm5
	movq (%eax,%ebp), %mm3
	leal (%edi,%edx,8), %ebp
	movq %mm4, %mm0
	pswapd %mm2, %mm2
	pfmul KP500000000KP500000000, %mm0
	movq %mm6, 16(%esp)
	pfmul KP866025403KN866025403, %mm2
	movq %mm3, %mm6
	movq %mm5, 32(%esp)
	pfsub %mm1, %mm7
	movq (%eax,%esi), %mm5
	leal (%edi,%edx,4), %esi
	pfadd %mm4, %mm6
	movq (%eax,%edx,8), %mm4
	pfsub %mm0, %mm3
	movq %mm7, %mm1
	movq %mm4, %mm0
	pfadd %mm5, %mm4
	pfadd %mm2, %mm1
	pfsubr %mm5, %mm0
	movq %mm3, 24(%esp)
	movq (%eax,%edx), %mm5
	movq (%eax,%ebp), %mm3
	pfsub %mm2, %mm7
	movq (%eax,%edi), %mm2
	leal (%ebx,%ebx,8), %ebp
	movq %mm1, 0(%esp)
	pswapd %mm0, %mm0
	movq %mm3, %mm1
	pfadd %mm5, %mm3
	movq %mm7, 8(%esp)
	movq %mm2, %mm7
	pfadd %mm4, %mm2
	pfmul KP500000000KP500000000, %mm4
	pfsubr %mm5, %mm1
	pfmul KP866025403KN866025403, %mm0
	movq %mm1, 48(%esp)
	movq (%eax,%edi,2), %mm5
	movq %mm5, %mm1
	pfadd %mm3, %mm5
	pfmul KP500000000KP500000000, %mm3
	pfsub %mm4, %mm7
	movq (%eax,%esi), %mm4
	leal (%ebx,%ebx,4), %esi
	pfsub %mm3, %mm1
	movq %mm1, 40(%esp)
	movq (%eax,%edx,2), %mm3
	movq %mm3, %mm1
	pfadd %mm4, %mm3
	pfsubr %mm4, %mm1
	movq (%eax,%edi,4), %mm4
	/* simd data load/store barrier */ 
	leal (%ebx,%ebx,2), %edi
	addl 164(%esp), %eax
	movq %mm1, 56(%esp)
	movq %mm4, %mm1
	pfadd %mm3, %mm4
	pfmul KP500000000KP500000000, %mm3
	pfsub %mm3, %mm1
	movq %mm2, %mm3
	pfadd %mm4, %mm2
	pfsub %mm4, %mm3
	movq %mm5, %mm4
	pfsub %mm6, %mm5
	pfadd %mm6, %mm4
	movq %mm2, %mm6
	pswapd %mm3, %mm3
	pswapd %mm5, %mm5
	pfsub %mm4, %mm2
	pfadd %mm4, %mm6
	movq %mm7, %mm4
	pfadd %mm0, %mm7
	pfsub %mm0, %mm4
	movq 56(%esp), %mm0
	pfmul KP559016994KP559016994, %mm2
	pswapd %mm0, %mm0
	pfmul KP866025403KN866025403, %mm0
	movq %mm2, 64(%esp)
	movq %mm1, %mm2
	pfsub %mm0, %mm2
	pfadd %mm0, %mm1
	movq %mm4, %mm0
	pfsub %mm2, %mm0
	pfadd %mm2, %mm4
	movq %mm7, %mm2
	pfadd %mm1, %mm7
	pfsub %mm1, %mm2
	movq %mm0, 88(%esp)
	movq %mm4, 96(%esp)
	movq %mm7, 80(%esp)
	movq 48(%esp), %mm1
	movq 32(%esp), %mm0
	movq 40(%esp), %mm4
	pswapd %mm1, %mm1
	movq %mm2, 72(%esp)
	movq 24(%esp), %mm2
	pswapd %mm0, %mm0
	pfmul KP866025403KN866025403, %mm1
	movq %mm4, %mm7
	pfmul KP866025403KN866025403, %mm0
	pfsub %mm1, %mm7
	pfadd %mm1, %mm4
	movq %mm2, %mm1
	pfadd %mm0, %mm2
	pfsub %mm0, %mm1
	movq %mm7, %mm0
	pfsub %mm1, %mm0
	pfadd %mm1, %mm7
	movq %mm4, %mm1
	pfadd %mm2, %mm4
	pfsub %mm2, %mm1
	movq 16(%esp), %mm2
	pswapd %mm0, %mm0
	movq %mm1, 104(%esp)
	movq %mm2, %mm1
	pfadd %mm6, %mm2
	pfmul KP250000000KP250000000, %mm6
	movq %mm2, (%ecx)
	movq %mm5, %mm2
	pfmul KP951056516KP951056516, %mm5
	pfmul KP587785252KP587785252, %mm2
	pfsub %mm6, %mm1
	movq %mm3, %mm6
	pfmul KP587785252KP587785252, %mm3
	pfmul KP951056516KP951056516, %mm6
	pfsub %mm5, %mm3
	movq 64(%esp), %mm5
	pfadd %mm2, %mm6
	movq %mm1, %mm2
	pfsub %mm5, %mm1
	pxor chs_lo, %mm3
	pfadd %mm5, %mm2
	pxor chs_lo, %mm6
	movq %mm1, %mm5
	pfsub %mm3, %mm1
	pfadd %mm3, %mm5
	movq %mm2, %mm3
	pfadd %mm6, %mm2
	pfsub %mm6, %mm3
	movq 96(%esp), %mm6
	movq %mm1, (%ecx,%edi)
	movq %mm5, (%ecx,%edi,4)
	movq 88(%esp), %mm5
	movq %mm2, (%ecx,%edi,2)
	leal (%esi,%ebx,2), %edi
	movq %mm3, (%ecx,%ebp)
	movq %mm6, %mm1
	movq 8(%esp), %mm3
	pfadd %mm7, %mm6
	leal (%edi,%ebx,4), %ebp
	pfsub %mm7, %mm1
	pswapd %mm5, %mm5
	movq %mm3, %mm7
	movq %mm5, %mm2
	pfmul KP587785252KP587785252, %mm5
	pfadd %mm6, %mm3
	pfmul KP250000000KP250000000, %mm6
	pfmul KP951056516KP951056516, %mm2
	pfmul KP559016994KP559016994, %mm1
	movq %mm3, (%ecx,%esi)
	movq %mm0, %mm3
	pfmul KP951056516KP951056516, %mm0
	pfmul KP587785252KP587785252, %mm3
	pfsub %mm6, %mm7
	pfsub %mm0, %mm5
	movq %mm7, %mm6
	pfsub %mm1, %mm7
	pfadd %mm3, %mm2
	pfadd %mm1, %mm6
	movq 80(%esp), %mm1
	pxor chs_lo, %mm5
	movq %mm7, %mm0
	pxor chs_lo, %mm2
	movq %mm6, %mm3
	pfsub %mm5, %mm0
	pfadd %mm5, %mm7
	movq %mm1, %mm5
	pfadd %mm2, %mm6
	pfadd %mm4, %mm1
	pfsub %mm2, %mm3
	movq 0(%esp), %mm2
	movq %mm0, (%ecx,%ebx,8)
	movq 72(%esp), %mm0
	movq %mm7, (%ecx,%ebx,2)
	pfsub %mm4, %mm5
	movq %mm6, (%ecx,%ebp)
	movq 104(%esp), %mm6
	movq %mm2, %mm7
	pfadd %mm1, %mm2
	pfmul KP250000000KP250000000, %mm1
	pswapd %mm0, %mm0
	pfmul KP559016994KP559016994, %mm5
	movq %mm3, (%ecx,%edi,2)
	pswapd %mm6, %mm6
	movq %mm0, %mm4
	pfmul KP951056516KP951056516, %mm0
	movq %mm6, %mm3
	pfmul KP951056516KP951056516, %mm6
	pfmul KP587785252KP587785252, %mm4
	movq %mm2, (%ecx,%esi,2)
	leal (%ebp,%ebx,2), %esi
	pfmul KP587785252KP587785252, %mm3
	pfsub %mm1, %mm7
	movq %mm7, %mm2
	pfadd %mm5, %mm7
	pfsub %mm6, %mm4
	pfadd %mm3, %mm0
	pfsub %mm5, %mm2
	movq %mm7, %mm6
	pxor chs_lo, %mm4
	pxor chs_lo, %mm0
	movq %mm2, %mm1
	pfsub %mm4, %mm1
	pfadd %mm4, %mm2
	pfsub %mm0, %mm6
	pfadd %mm0, %mm7
	movq %mm1, (%ecx,%esi)
	movq %mm2, (%ecx,%edi)
	movq %mm6, (%ecx,%ebx,4)
	movq %mm7, (%ecx,%ebx)
	addl 168(%esp), %ecx
	decl 160(%esp)
	jnz .L0
	femms 
	movl 128(%esp), %ebx
	movl 124(%esp), %esi
	movl 120(%esp), %edi
	movl 116(%esp), %ebp
	addl $132, %esp
	ret 

.section .rodata
nam:
	.string "n1k7i_15"
	.align 4
desc:
	.long 15
	.long nam
	.double 78
	.double 28
	.double 0
	.double 0
	.long fftwf_kdft_k7_pgenus
	.long 0
	.long 0
	.long 0
	.long 0

.text
	.align 4
.globl fftwf_codelet_n1k7i_15
fftwf_codelet_n1k7i_15:
	subl $12,%esp
	addl $-4,%esp
	pushl $desc
	pushl $n1k7i_15
	pushl 28(%esp)
	call fftwf_kdft_register
	addl $16,%esp
	addl $12,%esp
	ret

